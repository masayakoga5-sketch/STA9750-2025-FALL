{
  "hash": "e752e0eb3982fad08f87e0e4cae88391",
  "result": {
    "engine": "knitr",
    "markdown": "---\ntitle: \"Mini Project 2\"\nauthor: \"Masaya\"\nformat: html\ntheme: lumen\nproject:\n  type: website\n  output-dir: data\\mp02\n\n\n---\n\n\n\nWe are currently working to analyze housing affordability in the United States and use different metrics to see the trends that occured regaridng housing affordiability in this past 2 decades.\n\n**Task 1**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nif(!dir.exists(file.path(\"data\", \"mp02\"))){\n  dir.create(file.path(\"data\", \"mp02\"), showWarnings=FALSE, recursive=TRUE)\n}\n\nlibrary <- function(pkg){\n  ## Mask base::library() to automatically install packages if needed\n  ## Masking is important here so downlit picks up packages and links\n  ## to documentation\n  pkg <- as.character(substitute(pkg))\n  options(repos = c(CRAN = \"https://cloud.r-project.org\"))\n  if(!require(pkg, character.only=TRUE, quietly=TRUE)) install.packages(pkg)\n  stopifnot(require(pkg, character.only=TRUE, quietly=TRUE))\n}\n\nlibrary(tidyverse)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n── Attaching core tidyverse packages ──────────────────────── tidyverse 2.0.0 ──\n✔ dplyr     1.1.4     ✔ readr     2.1.5\n✔ forcats   1.0.0     ✔ stringr   1.5.1\n✔ ggplot2   3.5.2     ✔ tibble    3.3.0\n✔ lubridate 1.9.4     ✔ tidyr     1.3.1\n✔ purrr     1.1.0     \n── Conflicts ────────────────────────────────────────── tidyverse_conflicts() ──\n✖ dplyr::filter() masks stats::filter()\n✖ dplyr::lag()    masks stats::lag()\nℹ Use the conflicted package (<http://conflicted.r-lib.org/>) to force all conflicts to become errors\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(glue)\nlibrary(readxl)\nlibrary(tidycensus)\n\nget_acs_all_years <- function(variable, geography=\"cbsa\",\n                              start_year=2009, end_year=2023){\n  fname <- glue(\"{variable}_{geography}_{start_year}_{end_year}.csv\")\n  fname <- file.path(\"data\", \"mp02\", fname)\n  \n  if(!file.exists(fname)){\n    YEARS <- seq(start_year, end_year)\n    YEARS <- YEARS[YEARS != 2020] # Drop 2020 - No survey (covid)\n    \n    ALL_DATA <- map(YEARS, function(yy){\n      tidycensus::get_acs(geography, variable, year=yy, survey=\"acs1\") |>\n        mutate(year=yy) |>\n        select(-moe, -variable) |>\n        rename(!!variable := estimate)\n    }) |> bind_rows()\n    \n    write_csv(ALL_DATA, fname)\n  }\n  \n  read_csv(fname, show_col_types=FALSE)\n}\n\n# Household income (12 month)\nINCOME <- get_acs_all_years(\"B19013_001\") |>\n  rename(household_income = B19013_001)\n\n# Monthly rent\nRENT <- get_acs_all_years(\"B25064_001\") |>\n  rename(monthly_rent = B25064_001)\n\n# Total population\nPOPULATION <- get_acs_all_years(\"B01003_001\") |>\n  rename(population = B01003_001)\n\n# Total number of households\nHOUSEHOLDS <- get_acs_all_years(\"B11001_001\") |>\n  rename(households = B11001_001)\n\n# Number of new housing units built each year#\nget_building_permits <- function(start_year = 2009, end_year = 2023){\n  fname <- glue(\"housing_units_{start_year}_{end_year}.csv\")\n  fname <- file.path(\"data\", \"mp02\", fname)\n  \n  if(!file.exists(fname)){\n    HISTORICAL_YEARS <- seq(start_year, 2018)\n    \n    HISTORICAL_DATA <- map(HISTORICAL_YEARS, function(yy){\n      historical_url <- glue(\"https://www.census.gov/construction/bps/txt/tb3u{yy}.txt\")\n      \n      LINES <- readLines(historical_url)[-c(1:11)]\n      \n      CBSA_LINES <- str_detect(LINES, \"^[[:digit:]]\")\n      CBSA <- as.integer(str_sub(LINES[CBSA_LINES], 5, 10))\n      \n      PERMIT_LINES <- str_detect(str_sub(LINES, 48, 53), \"[[:digit:]]\")\n      PERMITS <- as.integer(str_sub(LINES[PERMIT_LINES], 48, 53))\n      \n      data_frame(CBSA = CBSA,\n                 new_housing_units_permitted = PERMITS, \n                 year = yy)\n    }) |> bind_rows()\n    \n    CURRENT_YEARS <- seq(2019, end_year)\n    \n    CURRENT_DATA <- map(CURRENT_YEARS, function(yy){\n      current_url <- glue(\"https://www.census.gov/construction/bps/xls/msaannual_{yy}99.xls\")\n      \n      temp <- tempfile()\n      \n      download.file(current_url, destfile = temp, mode=\"wb\")\n      \n      fallback <- function(.f1, .f2){\n        function(...){\n          tryCatch(.f1(...), \n                   error=function(e) .f2(...))\n        }\n      }\n      \n      reader <- fallback(read_xlsx, read_xls)\n      \n      reader(temp, skip=5) |>\n        na.omit() |>\n        select(CBSA, Total) |>\n        mutate(year = yy) |>\n        rename(new_housing_units_permitted = Total)\n    }) |> bind_rows()\n    \n    ALL_DATA <- rbind(HISTORICAL_DATA, CURRENT_DATA)\n    \n    write_csv(ALL_DATA, fname)\n    \n  }\n  \n  read_csv(fname, show_col_types=FALSE)\n}\n\nPERMITS <- get_building_permits()\n\n#Core-Based Statistical Areas Data Acquisition#\nlibrary(httr2)\nlibrary(rvest)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'rvest'\n\nThe following object is masked from 'package:readr':\n\n    guess_encoding\n```\n\n\n:::\n\n```{.r .cell-code}\nget_bls_industry_codes <- function(){\n  fname <- fname <- file.path(\"data\", \"mp02\", \"bls_industry_codes.csv\")\n  \n  if(!file.exists(fname)){\n    \n    resp <- request(\"https://www.bls.gov\") |> \n      req_url_path(\"cew\", \"classifications\", \"industry\", \"industry-titles.htm\") |>\n      req_headers(`User-Agent` = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:143.0) Gecko/20100101 Firefox/143.0\") |> \n      req_error(is_error = \\(resp) FALSE) |>\n      req_perform()\n    \n    resp_check_status(resp)\n    \n    naics_table <- resp_body_html(resp) |>\n      html_element(\"#naics_titles\") |> \n      html_table() |>\n      mutate(title = str_trim(str_remove(str_remove(`Industry Title`, Code), \"NAICS\"))) |>\n      select(-`Industry Title`) |>\n      mutate(depth = if_else(nchar(Code) <= 5, nchar(Code) - 1, NA)) |>\n      filter(!is.na(depth))\n    \n    naics_table <- naics_table |> \n      filter(depth == 4) |> \n      rename(level4_title=title) |> \n      mutate(level1_code = str_sub(Code, end=2), \n             level2_code = str_sub(Code, end=3), \n             level3_code = str_sub(Code, end=4)) |>\n      left_join(naics_table, join_by(level1_code == Code)) |>\n      rename(level1_title=title) |>\n      left_join(naics_table, join_by(level2_code == Code)) |>\n      rename(level2_title=title) |>\n      left_join(naics_table, join_by(level3_code == Code)) |>\n      rename(level3_title=title) |>\n      select(-starts_with(\"depth\")) |>\n      rename(level4_code = Code) |>\n      select(level1_title, level2_title, level3_title, level4_title, \n             level1_code,  level2_code,  level3_code,  level4_code)\n    \n    write_csv(naics_table, fname)\n  }\n  \n  read_csv(fname, show_col_types=FALSE)\n  \n}\n\nINDUSTRY_CODES <- get_bls_industry_codes()\n\n#BLS BLS Quarterly Census of Employment and Wages Data Acqusition#\nlibrary(httr2)\nlibrary(rvest)\nget_bls_qcew_annual_averages <- function(start_year=2009, end_year=2023){\n  fname <- glue(\"bls_qcew_{start_year}_{end_year}.csv.gz\")\n  fname <- file.path(\"data\", \"mp02\", fname)\n  \n  YEARS <- seq(start_year, end_year)\n  YEARS <- YEARS[YEARS != 2020] # Drop Covid year to match ACS\n  \n  if(!file.exists(fname)){\n    ALL_DATA <- map(YEARS, .progress=TRUE, possibly(function(yy){\n      fname_inner <- file.path(\"data\", \"mp02\", glue(\"{yy}_qcew_annual_singlefile.zip\"))\n      \n      if(!file.exists(fname_inner)){\n        request(\"https://www.bls.gov\") |> \n          req_url_path(\"cew\", \"data\", \"files\", yy, \"csv\",\n                       glue(\"{yy}_annual_singlefile.zip\")) |>\n          req_headers(`User-Agent` = \"Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:143.0) Gecko/20100101 Firefox/143.0\") |> \n          req_retry(max_tries=5) |>\n          req_perform(fname_inner)\n      }\n      \n      if(file.info(fname_inner)$size < 755e5){\n        warning(sQuote(fname_inner), \"appears corrupted. Please delete and retry this step.\")\n      }\n      \n      read_csv(fname_inner, \n               show_col_types=FALSE) |> \n        mutate(YEAR = yy) |>\n        select(area_fips, \n               industry_code, \n               annual_avg_emplvl, \n               total_annual_wages, \n               YEAR) |>\n        filter(nchar(industry_code) <= 5, \n               str_starts(area_fips, \"C\")) |>\n        filter(str_detect(industry_code, \"-\", negate=TRUE)) |>\n        mutate(FIPS = area_fips, \n               INDUSTRY = as.integer(industry_code), \n               EMPLOYMENT = as.integer(annual_avg_emplvl), \n               TOTAL_WAGES = total_annual_wages) |>\n        select(-area_fips, \n               -industry_code, \n               -annual_avg_emplvl, \n               -total_annual_wages) |>\n        # 10 is a special value: \"all industries\" , so omit\n        filter(INDUSTRY != 10) |> \n        mutate(AVG_WAGE = TOTAL_WAGES / EMPLOYMENT)\n    })) |> bind_rows()\n    \n    write_csv(ALL_DATA, fname)\n  }\n  \n  ALL_DATA <- read_csv(fname, show_col_types=FALSE)\n  \n  ALL_DATA_YEARS <- unique(ALL_DATA$YEAR)\n  \n  YEARS_DIFF <- setdiff(YEARS, ALL_DATA_YEARS)\n  \n  if(length(YEARS_DIFF) > 0){\n    stop(\"Download failed for the following years: \", YEARS_DIFF, \n         \". Please delete intermediate files and try again.\")\n  }\n  \n  ALL_DATA\n}\n\nWAGES <- get_bls_qcew_annual_averages()\n```\n:::\n\n\n\n**Task 2**\n*Question 1*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(readr)\n\nPERMITS <- PERMITS %>%\n  mutate(CBSA = as.character(CBSA))\n\nINCOME <- INCOME %>%\n  mutate(GEOID = as.character(GEOID))\n\nINCOME_unique <- INCOME %>%\n  group_by(GEOID) %>%\n  slice(1) %>%\n  ungroup() %>%\n  select(GEOID, NAME)\n\ntop_cbsa <- PERMITS %>%\n  filter(year >= 2010 & year <= 2019) %>%\n  group_by(CBSA) %>%\n  summarize(total_units = sum(new_housing_units_permitted, na.rm = TRUE)) %>%\n  arrange(desc(total_units)) %>%\n  slice(1)\n\ntop_cbsa_named <- top_cbsa %>%\n  left_join(INCOME_unique, by = c(\"CBSA\" = \"GEOID\"))\n\ncat(\"The CBSA that permitted the largest number of new housing units from 2010 to 2019 is\",\n  top_cbsa_named$NAME, \"with a total of\",\n  format(top_cbsa_named$total_units, big.mark = \",\"), \"units.\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe CBSA that permitted the largest number of new housing units from 2010 to 2019 is Houston-Sugar Land-Baytown, TX Metro Area with a total of 482,075 units.\n```\n\n\n:::\n:::\n\n\n*Question 2*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\n\nPERMITS <- PERMITS %>% mutate(CBSA = as.character(CBSA))\n\nalbuquerque_permits <- PERMITS %>%\n  filter(CBSA == \"10740\")\n\nalbuquerque_max <- albuquerque_permits %>%\n  arrange(desc(new_housing_units_permitted)) %>%\n  slice(1) %>%\n  select(year, new_housing_units_permitted)\n\ncat(\"Albuquerque, NM (CBSA 10740) permitted the most new housing units in\",\n  albuquerque_max$year, \"with a total of\",\n  format(albuquerque_max$new_housing_units_permitted, big.mark = \",\"), \"units.\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nAlbuquerque, NM (CBSA 10740) permitted the most new housing units in 2021 with a total of 4,021 units.\n```\n\n\n:::\n:::\n\n\n*Question 3*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(tidycensus)\n\nINCOME <- get_acs(\n  geography = \"cbsa\",\n  variables = \"B19013_001\",\n  year = 2015,\n  survey = \"acs1\") %>%\n  rename(household_income = estimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2015 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: • You have not set a Census API key. Users without a key are limited to 500\nqueries per day and may experience performance limitations.\nℹ For best results, get a Census API key at\nhttp://api.census.gov/data/key_signup.html and then supply the key to the\n`census_api_key()` function to use it throughout your tidycensus session.\nThis warning is displayed once per session.\n```\n\n\n:::\n\n```{.r .cell-code}\nHOUSEHOLDS <- get_acs(\n  geography = \"cbsa\",\n  variables = \"B11001_001\",\n  year = 2015,\n  survey = \"acs1\") %>%\n  rename(households = estimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2015 1-year ACS\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n```{.r .cell-code}\nPOPULATION_clean1 <- get_acs(\n  geography = \"cbsa\",\n  variables = \"B01003_001\",\n  year = 2015,\n  survey = \"acs1\") %>%\n  rename(population = estimate)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2015 1-year ACS\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n```{.r .cell-code}\nCBSA_2015 <- INCOME %>%\n  left_join(HOUSEHOLDS, by = \"GEOID\") %>%\n  left_join(POPULATION_clean1, by = \"GEOID\")\n\nCBSA_2015 <- transform(\n  CBSA_2015,\n  total_income = household_income * households,\n  state = str_replace(str_extract(NAME, \", (.{2})\"), \", \", \"\"))\n\nSTATE_INCOME <- CBSA_2015 %>%\n  group_by(state) %>%\n  summarize(\n    total_income_state = sum(total_income, na.rm = TRUE),\n    total_population_state = sum(population, na.rm = TRUE),\n    avg_individual_income = total_income_state / total_population_state,\n    .groups = \"drop\")\n\nstate_df <- data.frame(\n  abb  = c(state.abb, \"DC\", \"PR\"),\n  name = c(state.name, \"District of Columbia\", \"Puerto Rico\"))\n\nSTATE_INCOME <- STATE_INCOME %>%\n  left_join(state_df, by = c(\"state\" = \"abb\"))\n\ntop_state <- STATE_INCOME %>%\n  arrange(desc(avg_individual_income)) %>%\n  slice(1)\n\ncat(\"The state with the highest average individual income in 2015 is\",\n  top_state$name, \"with an average income of $\",\n  format(round(top_state$avg_individual_income, 2), big.mark = \",\"), \".\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nThe state with the highest average individual income in 2015 is District of Columbia with an average income of $ 33,232.88 .\n```\n\n\n:::\n:::\n\n\n*Question 4*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\nlibrary(DT)\n\ndata_scientists <- WAGES %>%\n  filter(INDUSTRY == 5182) %>%\n  group_by(FIPS, YEAR) %>%\n  summarize(total_employment = sum(EMPLOYMENT, na.rm = TRUE), .groups = \"drop\")\n\ntop_cbsa_each_year <- data_scientists %>%\n  group_by(YEAR) %>%\n  slice_max(order_by = total_employment, n = 1, with_ties = FALSE) %>%\n  ungroup()\n\ncbsa_names <- INCOME %>%\n  select(GEOID, NAME)\ncbsa_names$std_cbsa <- paste0(\"C\", cbsa_names$GEOID)\n\ntop_cbsa_each_year$std_cbsa <- paste0(top_cbsa_each_year$FIPS, \"0\")\n\ntop_cbsa_each_year <- left_join(top_cbsa_each_year, cbsa_names, by = \"std_cbsa\")\n\ndatatable(\n  top_cbsa_each_year %>%\n    arrange(YEAR) %>%\n    select(YEAR, NAME, total_employment),\n  caption = \"Top CBSA for Data Scientists by Employment (5182)\",\n  options = list(pageLength = 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-5d5de7f7ba1d126678ae\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-5d5de7f7ba1d126678ae\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Top CBSA for Data Scientists by Employment (5182)<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\"],[2009,2010,2011,2012,2013,2014,2015,2016,2017,2018,2019,2021,2022,2023],[\"New York-Newark-Jersey City, NY-NJ-PA Metro Area\",\"Dallas-Fort Worth-Arlington, TX Metro Area\",\"Dallas-Fort Worth-Arlington, TX Metro Area\",\"New York-Newark-Jersey City, NY-NJ-PA Metro Area\",\"New York-Newark-Jersey City, NY-NJ-PA Metro Area\",\"New York-Newark-Jersey City, NY-NJ-PA Metro Area\",\"New York-Newark-Jersey City, NY-NJ-PA Metro Area\",\"San Francisco-Oakland-Hayward, CA Metro Area\",\"San Francisco-Oakland-Hayward, CA Metro Area\",\"San Francisco-Oakland-Hayward, CA Metro Area\",\"San Francisco-Oakland-Hayward, CA Metro Area\",\"Atlanta-Sandy Springs-Roswell, GA Metro Area\",\"San Francisco-Oakland-Hayward, CA Metro Area\",\"San Francisco-Oakland-Hayward, CA Metro Area\"],[16349,13238,13283,14423,14251,17828,18922,16369,18089,22379,24154,15810,34080,32961]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>YEAR<\\/th>\\n      <th>NAME<\\/th>\\n      <th>total_employment<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,3]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"YEAR\",\"targets\":1},{\"name\":\"NAME\",\"targets\":2},{\"name\":\"total_employment\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n*Question 5*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(stringr)\n\nnyc_cbsa <- WAGES %>%\n  filter(str_detect(FIPS, \"C1018|C1038|C1042|C1050|C1058\")) %>%\n  pull(FIPS) %>%\n  unique()\n\nnyc_finance <- WAGES %>%\n  filter(FIPS %in% nyc_cbsa) %>%\n  group_by(YEAR) %>%\n  summarise(\n    total_wages = sum(TOTAL_WAGES, na.rm = TRUE),\n    fin_wages = sum(TOTAL_WAGES[str_starts(as.character(INDUSTRY), \"52\")], na.rm = TRUE),\n    .groups = \"drop\")\n\nnyc_finance$share_fin <- nyc_finance$fin_wages / nyc_finance$total_wages\n\npeak <- nyc_finance %>%\n  filter(share_fin == max(share_fin, na.rm = TRUE))\n\ncat(\"In\", peak$YEAR, \",\",\n  round(peak$share_fin * 100, 2),\"% of NYC total wages were in Finance & Insurance (NAICS 52), the peak in the period.\\n\")\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nIn 2021 , 5.08 % of NYC total wages were in Finance & Insurance (NAICS 52), the peak in the period.\n```\n\n\n:::\n:::\n\n\n\n**Task 3**\n\n*Question 1*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\n\nINCOME <- read_csv(\"data/mp02/B19013_001_cbsa_2009_2023.csv\", show_col_types = FALSE)\n\nINCOME <- INCOME %>%\n  rename(household_income = B19013_001)\n\nINCOME <- INCOME %>% mutate(year = as.numeric(.data$year))\nRENT   <- RENT   %>% mutate(year = as.numeric(.data$year))\n\nincome_rent <- inner_join(INCOME, RENT, by = c(\"GEOID\", \"year\"))\n\ndata_2009 <- income_rent %>% filter(.data$year == 2009)\n\nggplot(data_2009, aes(x = household_income, y = monthly_rent)) +\n  geom_point(alpha = 0.6, color = \"blue\") +\n  geom_smooth(method = \"lm\", se = TRUE, color = \"red\") +\n  labs(\n    title = \"Monthly Rent vs. Average Household Income per CBSA (2009)\",\n    x = \"Average Household Income (USD)\",\n    y = \"Average Monthly Rent (USD)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.title = element_text(size = 12))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`geom_smooth()` using formula = 'y ~ x'\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mp02_files/figure-html/unnamed-chunk-7-1.png){width=672}\n:::\n:::\n\n\n*Question 2*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(tidycensus)\nlibrary(ggplot2)\nlibrary(scales)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n\nAttaching package: 'scales'\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:purrr':\n\n    discard\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe following object is masked from 'package:readr':\n\n    col_factor\n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(purrr)\n\nyears <- 2013:2019\n\nget_employment_data <- function(y) {\n  total_emp <- get_acs(\n    geography = \"cbsa\",\n    variables = \"B23025_003\",\n    year = y,\n    survey = \"acs1\"\n  ) %>% rename(total_employment = estimate)\n  \n  healthcare_emp <- get_acs(\n    geography = \"cbsa\",\n    variables = \"C24010_005\",\n    year = y,\n    survey = \"acs1\"\n  ) %>% rename(healthcare_employment = estimate)\n  \n  total_emp %>%\n    left_join(healthcare_emp, by = \"GEOID\") %>%\n    mutate(NAME = total_emp$NAME, YEAR = y) %>%\n    select(GEOID, NAME, YEAR, total_employment, healthcare_employment)\n}\n\nemployment_data <- map_dfr(years, get_employment_data)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2013 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2013 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2014 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2014 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2015 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2015 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2016 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2016 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2017 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2017 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2018 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2018 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2019 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nGetting data from the 2019 1-year ACS\n```\n\n\n:::\n\n::: {.cell-output .cell-output-stderr}\n\n```\nThe 1-year ACS provides data for geographies with populations of 65,000 and greater.\n```\n\n\n:::\n\n```{.r .cell-code}\nselected_cbsa <- c(\"35620\", \"31080\", \"16980\", \"14460\")\nemployment_data_4 <- employment_data %>%\n  filter(GEOID %in% selected_cbsa)\n\nggplot(employment_data_4, aes(\n  x = total_employment,\n  y = healthcare_employment\n)) +\n  geom_point(aes(color = YEAR), size = 3) +\n  geom_line(aes(group = 1), color = \"gray\", alpha = 0.7) +\n  facet_wrap(~ NAME, scales = \"free\") +\n  scale_x_log10(labels = comma) + \n  scale_y_continuous(labels = comma) +\n  scale_color_viridis_c(option = \"plasma\", name = \"Year\") +\n  labs(\n    title = \"Health Care & Social Services Employment vs Total Employment\",\n    subtitle = \"Selected CBSAs including NYC (2013–2019)\",\n    x = \"Total Employment (log scale)\",\n    y = \"Health Care & Social Services Employment (NAICS 62)\"\n  ) +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    plot.subtitle = element_text(size = 11),\n    axis.title = element_text(size = 12))\n```\n\n::: {.cell-output-display}\n![](mp02_files/figure-html/unnamed-chunk-8-1.png){width=672}\n:::\n:::\n\n\n\n*Question 3*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(readr)\n\nPOPULATION <- read_csv(\"data/mp02/B01003_001_cbsa_2009_2023.csv\", show_col_types = FALSE) %>%\n  rename(population = B01003_001)\n\nHOUSEHOLDS <- read_csv(\"data/mp02/B11001_001_cbsa_2009_2023.csv\", show_col_types = FALSE) %>%\n  rename(households = B11001_001)\n\nCBSA_HH <- POPULATION %>%\n  select(GEOID, NAME, year, population) %>%\n  left_join(\n    HOUSEHOLDS %>% select(GEOID, year, households),\n    by = c(\"GEOID\", \"year\")) %>%\n  mutate(avg_household_size = population / households)\n\ntop_cities <- CBSA_HH %>%\n  filter(year == max(year)) %>%\n  arrange(desc(population)) %>%\n  slice_head(n = 10) %>%\n  pull(NAME)\n\nCBSA_HH_filtered <- CBSA_HH %>%\n  filter(NAME %in% top_cities)\n\nggplot(CBSA_HH_filtered, aes(x = year, y = avg_household_size, color = NAME)) +\n  geom_line(size = 1) +\n  geom_point(size = 2) +\n  scale_x_continuous(breaks = seq(min(CBSA_HH_filtered$year), max(CBSA_HH_filtered$year), by = 1)) +\n  labs(\n    title = \"Average Household Size Over Time\",\n    x = \"Year\",\n    y = \"Average Household Size\",\n    color = \"City\") +\n  theme_minimal() +\n  theme(\n    plot.title = element_text(size = 14, face = \"bold\"),\n    axis.title = element_text(size = 12),\n    legend.title = element_text(size = 12),\n    legend.text = element_text(size = 10))\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Using `size` aesthetic for lines was deprecated in ggplot2 3.4.0.\nℹ Please use `linewidth` instead.\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mp02_files/figure-html/unnamed-chunk-9-1.png){width=672}\n:::\n:::\n\n\n\n\n**Task 4**\n\n*Table 1*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(tidyverse)\nlibrary(glue)\nlibrary(DT)\n\nRENT_BURDEN <- INCOME %>%\n  inner_join(RENT, by = c(\"GEOID\", \"NAME\", \"year\"))\n\nRENT_BURDEN <- RENT_BURDEN %>%\n  mutate(rent_to_income_percentage = ((monthly_rent * 12) / household_income) * 100)\n\nNATIONAL_AVG <- RENT_BURDEN %>%\n  group_by(year) %>%\n  summarize(national_avg_rti = mean(rent_to_income_percentage, na.rm = TRUE))\n\nbaseline_rti <- NATIONAL_AVG %>%\n  filter(year == 2009) %>%\n  pull(national_avg_rti)\n\nRENT_BURDEN <- RENT_BURDEN %>%\n  mutate(rent_burden_index = (rent_to_income_percentage / baseline_rti) * 100)\n\nnyc_name <- RENT_BURDEN %>%\n  filter(str_detect(NAME, \"New York\")) %>%\n  distinct(NAME) %>%\n  pull(NAME) %>%\n  first()\n\nprint(glue(\"Using metro name: {nyc_name}\"))\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nUsing metro name: New York-Northern New Jersey-Long Island, NY-NJ-PA Metro Area\n```\n\n\n:::\n\n```{.r .cell-code}\nnyc_rent <- RENT_BURDEN %>%\n  filter(NAME == nyc_name) %>%\n  select(year, household_income, monthly_rent, rent_to_income_percentage, rent_burden_index) %>%\n  mutate(rent_to_income_percentage = round(rent_to_income_percentage, 2),\n         rent_burden_index = round(rent_burden_index, 2))\n\ndatatable(\n  nyc_rent,\n  caption = glue(\"Rent Burden Over Time — {nyc_name}\"),\n  options = list(pageLength = 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-c73b44af5e0527630a2c\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-c73b44af5e0527630a2c\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Rent Burden Over Time — New York-Northern New Jersey-Long Island, NY-NJ-PA Metro Area<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\"],[2009,2010,2011,2012],[62887,61927,62322,63982],[1125,1150,1187,1209],[21.47,22.28,22.86,22.68],[110.63,114.85,117.79,116.86]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>year<\\/th>\\n      <th>household_income<\\/th>\\n      <th>monthly_rent<\\/th>\\n      <th>rent_to_income_percentage<\\/th>\\n      <th>rent_burden_index<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[1,2,3,4,5]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"year\",\"targets\":1},{\"name\":\"household_income\",\"targets\":2},{\"name\":\"monthly_rent\",\"targets\":3},{\"name\":\"rent_to_income_percentage\",\"targets\":4},{\"name\":\"rent_burden_index\",\"targets\":5}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n*Table 2*\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlatest_year <- max(RENT_BURDEN$year, na.rm = TRUE)\n\ntop_bottom <- RENT_BURDEN %>%\n  filter(year == latest_year) %>%\n  group_by(NAME) %>%\n  summarize(avg_index = mean(rent_burden_index, na.rm = TRUE)) %>%\n  arrange(desc(avg_index)) %>%\n  mutate(rank = row_number())\n\ndatatable(\n  bind_rows(\n    head(top_bottom, 10),\n    tail(top_bottom, 10)\n  ),\n  caption = glue(\"Top & Bottom 10 Metro Areas by Rent Burden Index ({latest_year})\"),\n  options = list(pageLength = 20))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-700f7b9eb51cb77b08e4\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-700f7b9eb51cb77b08e4\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Top &amp; Bottom 10 Metro Areas by Rent Burden Index (2023)<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[\"Clearlake, CA Micro Area\",\"Aguadilla, PR Metro Area\",\"Cape Coral-Fort Myers, FL Metro Area\",\"Miami-Fort Lauderdale-West Palm Beach, FL Metro Area\",\"Port St. Lucie, FL Metro Area\",\"Ponce, PR Metro Area\",\"Tampa-St. Petersburg-Clearwater, FL Metro Area\",\"Key West-Key Largo, FL Micro Area\",\"North Port-Bradenton-Sarasota, FL Metro Area\",\"Ocala, FL Metro Area\",\"Albertville, AL Micro Area\",\"Mount Airy, NC Micro Area\",\"Talladega-Sylacauga, AL Micro Area\",\"Decatur, AL Metro Area\",\"Jefferson City, MO Metro Area\",\"Wisconsin Rapids-Marshfield, WI Micro Area\",\"Watertown-Fort Atkinson, WI Micro Area\",\"Bismarck, ND Metro Area\",\"Manitowoc, WI Micro Area\",\"Laconia, NH Micro Area\"],[160.6342885498673,159.1856373802302,155.330103794405,155.1963405350811,151.9942819148698,147.9921296025972,146.9950698865147,145.5116737737621,145.2963337608153,144.0421364538938,74.25652855880793,73.94865101115805,73.19078322781286,72.39287753208902,71.37013108835265,71.27888240658635,71.12560779154887,70.48637971980544,68.09499571131613,65.64758274177187],[1,2,3,4,5,6,7,8,9,10,521,522,523,524,525,526,527,528,529,530]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>NAME<\\/th>\\n      <th>avg_index<\\/th>\\n      <th>rank<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":20,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[2,3]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"NAME\",\"targets\":1},{\"name\":\"avg_index\",\"targets\":2},{\"name\":\"rank\",\"targets\":3}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false,\"lengthMenu\":[10,20,25,50,100]}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n**Task 5**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(RcppRoll)\nlibrary(DT)\n\nPOPULATION_clean1 <- POPULATION %>%\n  rename(CBSA = GEOID) %>%\n  mutate(CBSA = as.character(CBSA))\n\nPERMITS_clean1 <- PERMITS %>%\n  rename(CBSA = CBSA,\n         permits = new_housing_units_permitted) %>%\n  mutate(CBSA = as.character(CBSA)) \n\nhousing_data <- POPULATION_clean1 %>%\n  left_join(PERMITS_clean1, by = c(\"CBSA\", \"year\"))\n\nhousing_data <- housing_data %>%\n  group_by(CBSA) %>%\n  arrange(year, .by_group = TRUE) %>%\n  mutate(\n    pop_5yrs_ago = lag(population, 5),\n    pop_growth_5yr = population - pop_5yrs_ago) %>%\n  filter(year >= 2014) %>%  \n  ungroup()\n\nhousing_data <- housing_data %>%\n  mutate(\n    housing_growth_instant = (permits / population) * 1000,\n    housing_growth_rate = if_else(pop_growth_5yr > 0, permits / pop_growth_5yr, 0))\n\nhousing_data <- housing_data %>%\n  mutate(\n    instant_z = scale(housing_growth_instant)[,1],\n    rate_z = scale(housing_growth_rate)[,1],\n    composite_score = instant_z + rate_z)\n\nhousing_data <- housing_data %>%\n  group_by(CBSA) %>%\n  arrange(year, .by_group = TRUE) %>%\n  mutate(\n    instant_roll5 = roll_mean(housing_growth_instant, 5, fill = NA, align = \"right\"),\n    rate_roll5 = roll_mean(housing_growth_rate, 5, fill = NA, align = \"right\")\n  ) %>%\n  ungroup()\n\ntop_bottom_instant <- housing_data %>%\n  filter(!is.na(instant_z)) %>%\n  arrange(desc(instant_z)) %>%\n  slice(c(1:10, (n()-9):n())) %>%\n  select(CBSA, NAME, year, population, permits, housing_growth_instant, instant_z)\n\ntop_bottom_rate <- housing_data %>%\n  filter(!is.na(rate_z)) %>%\n  arrange(desc(rate_z)) %>%\n  slice(c(1:10, (n()-9):n())) %>%\n  select(CBSA, NAME, year, population, permits, housing_growth_rate, rate_z)\n\ntop_bottom_composite <- housing_data %>%\n  filter(!is.na(composite_score)) %>%\n  arrange(desc(composite_score)) %>%\n  slice(c(1:10, (n()-9):n())) %>%\n  select(CBSA, NAME, year, population, permits, composite_score)\n\ndatatable(top_bottom_instant, \n          caption = \"Top and Bottom CBSAs — Instant Housing Growth (Z-Score)\",\n          options = list(pageLength = 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-0aa6d9e98d033ef3b442\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-0aa6d9e98d033ef3b442\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Top and Bottom CBSAs — Instant Housing Growth (Z-Score)<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[\"41540\",\"45540\",\"34820\",\"45540\",\"39460\",\"39460\",\"34820\",\"45540\",\"34820\",\"45540\",\"34060\",\"19180\",\"21820\",\"48540\",\"19180\",\"48540\",\"34060\",\"19180\",\"21820\",\"19180\"],[\"Salisbury, MD Metro Area\",\"The Villages, FL Metro Area\",\"Myrtle Beach-Conway-North Myrtle Beach, SC Metro Area\",\"The Villages, FL Metro Area\",\"Punta Gorda, FL Metro Area\",\"Punta Gorda, FL Metro Area\",\"Myrtle Beach-Conway-North Myrtle Beach, SC-NC Metro Area\",\"The Villages, FL Metro Area\",\"Myrtle Beach-Conway-North Myrtle Beach, SC-NC Metro Area\",\"The Villages, FL Metro Area\",\"Morgantown, WV Metro Area\",\"Danville, IL Micro Area\",\"Fairbanks, AK Metro Area\",\"Wheeling, WV-OH Metro Area\",\"Danville, IL Metro Area\",\"Wheeling, WV-OH Metro Area\",\"Morgantown, WV Metro Area\",\"Danville, IL Metro Area\",\"Fairbanks, AK Metro Area\",\"Danville, IL Metro Area\"],[2023,2021,2023,2022,2022,2021,2021,2014,2022,2019,2023,2023,2016,2019,2021,2023,2022,2014,2015,2022],[129710,135638,397478,144970,202661,194843,509794,114350,536165,132420,141817,71652,100605,138948,73095,135517,141041,79728,99631,72337],[4894,4611,13176,4439,5676,4830,12219,2570,12000,2928,17,8,11,12,6,11,11,6,7,2],[37.73032148639273,33.99489818487444,33.14900447320355,30.62012830240739,28.007362047952,24.78918924467392,23.96850492551894,22.47485789243551,22.38116997566048,22.11146352514726,0.1198727938117433,0.1116507564338748,0.1093385020625217,0.08636324380343727,0.08208495793145906,0.08117062803928658,0.07799150601598118,0.07525586995785671,0.07025925665706458,0.02764836805507555],[9.558640176530274,8.492003104561993,8.250461110794834,7.528349356260349,6.782283081453662,5.863345081955377,5.629001542138096,5.202495850728326,5.175743593444097,5.098729858869638,-1.180892034601518,-1.183239808646505,-1.183900064803097,-1.190460569522127,-1.191682219104298,-1.191943302810287,-1.19285108999601,-1.19363224131394,-1.195059006783532,-1.207226397138975]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>CBSA<\\/th>\\n      <th>NAME<\\/th>\\n      <th>year<\\/th>\\n      <th>population<\\/th>\\n      <th>permits<\\/th>\\n      <th>housing_growth_instant<\\/th>\\n      <th>instant_z<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"CBSA\",\"targets\":1},{\"name\":\"NAME\",\"targets\":2},{\"name\":\"year\",\"targets\":3},{\"name\":\"population\",\"targets\":4},{\"name\":\"permits\",\"targets\":5},{\"name\":\"housing_growth_instant\",\"targets\":6},{\"name\":\"instant_z\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\ndatatable(top_bottom_rate, \n          caption = \"Top and Bottom CBSAs — Housing Growth Rate (Z-Score)\",\n          options = list(pageLength = 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-faa4f64d48709ecd4b83\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-faa4f64d48709ecd4b83\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Top and Bottom CBSAs — Housing Growth Rate (Z-Score)<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[\"33660\",\"15380\",\"35100\",\"48140\",\"22520\",\"38300\",\"17860\",\"10580\",\"33780\",\"30340\",\"49660\",\"49660\",\"49660\",\"49660\",\"49660\",\"49660\",\"49660\",\"49660\",\"49660\",\"49780\"],[\"Mobile, AL Metro Area\",\"Buffalo-Cheektowaga-Niagara Falls, NY Metro Area\",\"New Bern, NC Metro Area\",\"Wausau, WI Metro Area\",\"Florence-Muscle Shoals, AL Metro Area\",\"Pittsburgh, PA Metro Area\",\"Columbia, MO Metro Area\",\"Albany-Schenectady-Troy, NY Metro Area\",\"Monroe, MI Metro Area\",\"Lewiston-Auburn, ME Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren-Boardman, OH-PA Metro Area\",\"Youngstown-Warren, OH Metro Area\",\"Zanesville, OH Micro Area\"],[2017,2015,2019,2018,2017,2021,2017,2019,2018,2017,2014,2015,2016,2017,2018,2019,2021,2022,2023,2016],[413955,1135230,127904,135428,147038,2353538,178271,880381,150439,107651,553263,549885,544746,541926,538952,536081,538069,535499,425969,86068],[998,1677,552,308,775,5223,1634,1870,492,252,313,311,466,324,374,330,400,364,290,null],[52.52631578947368,52.40625,30.66666666666667,25.66666666666667,15.5,10.59432048681542,9.611764705882353,8.738317757009346,7.809523809523809,6,0,0,0,0,0,0,0,0,0,0],[36.37225884607544,36.28885092603499,21.18668538555997,17.71325967428637,10.65062739469671,7.242724724224009,6.560157821773325,5.95338720384353,5.308167848309217,4.051118543276865,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582,-0.1169923102514582]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>CBSA<\\/th>\\n      <th>NAME<\\/th>\\n      <th>year<\\/th>\\n      <th>population<\\/th>\\n      <th>permits<\\/th>\\n      <th>housing_growth_rate<\\/th>\\n      <th>rate_z<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6,7]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"CBSA\",\"targets\":1},{\"name\":\"NAME\",\"targets\":2},{\"name\":\"year\",\"targets\":3},{\"name\":\"population\",\"targets\":4},{\"name\":\"permits\",\"targets\":5},{\"name\":\"housing_growth_rate\",\"targets\":6},{\"name\":\"rate_z\",\"targets\":7}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n\n```{.r .cell-code}\ndatatable(top_bottom_composite, \n          caption = \"Top and Bottom CBSAs — Composite Growth Score\",\n          options = list(pageLength = 10))\n```\n\n::: {.cell-output-display}\n\n```{=html}\n<div class=\"datatables html-widget html-fill-item\" id=\"htmlwidget-d0ace1ccbe086e4a77f1\" style=\"width:100%;height:auto;\"></div>\n<script type=\"application/json\" data-for=\"htmlwidget-d0ace1ccbe086e4a77f1\">{\"x\":{\"filter\":\"none\",\"vertical\":false,\"caption\":\"<caption>Top and Bottom CBSAs — Composite Growth Score<\\/caption>\",\"data\":[[\"1\",\"2\",\"3\",\"4\",\"5\",\"6\",\"7\",\"8\",\"9\",\"10\",\"11\",\"12\",\"13\",\"14\",\"15\",\"16\",\"17\",\"18\",\"19\",\"20\"],[\"33660\",\"15380\",\"35100\",\"48140\",\"22520\",\"41540\",\"45540\",\"34820\",\"17860\",\"45540\",\"19180\",\"19180\",\"19180\",\"34060\",\"48540\",\"21820\",\"19180\",\"48540\",\"19180\",\"19180\"],[\"Mobile, AL Metro Area\",\"Buffalo-Cheektowaga-Niagara Falls, NY Metro Area\",\"New Bern, NC Metro Area\",\"Wausau, WI Metro Area\",\"Florence-Muscle Shoals, AL Metro Area\",\"Salisbury, MD Metro Area\",\"The Villages, FL Metro Area\",\"Myrtle Beach-Conway-North Myrtle Beach, SC Metro Area\",\"Columbia, MO Metro Area\",\"The Villages, FL Metro Area\",\"Danville, IL Metro Area\",\"Danville, IL Metro Area\",\"Danville, IL Micro Area\",\"Morgantown, WV Metro Area\",\"Wheeling, WV-OH Metro Area\",\"Fairbanks, AK Metro Area\",\"Danville, IL Metro Area\",\"Wheeling, WV-OH Metro Area\",\"Danville, IL Metro Area\",\"Danville, IL Metro Area\"],[2017,2015,2019,2018,2017,2023,2021,2023,2017,2022,2016,2015,2023,2022,2019,2015,2021,2023,2014,2022],[413955,1135230,127904,135428,147038,129710,135638,397478,178271,144970,78111,79282,71652,141041,138948,99631,73095,135517,79728,72337],[998,1677,552,308,775,4894,4611,13176,1634,4439,10,10,8,11,12,7,6,11,6,2],[35.84555879048581,35.49554855216671,21.20390765808236,17.14754857682686,10.94054930310372,9.441647866278815,8.566280465949427,8.133468800543376,7.962304569476154,7.558382284230913,-1.295557098597377,-1.296097040397742,-1.300232118897963,-1.306971721718794,-1.307452879773585,-1.308358989019969,-1.308674529355756,-1.308935613061745,-1.310624551565398,-1.324218707390433]],\"container\":\"<table class=\\\"display\\\">\\n  <thead>\\n    <tr>\\n      <th> <\\/th>\\n      <th>CBSA<\\/th>\\n      <th>NAME<\\/th>\\n      <th>year<\\/th>\\n      <th>population<\\/th>\\n      <th>permits<\\/th>\\n      <th>composite_score<\\/th>\\n    <\\/tr>\\n  <\\/thead>\\n<\\/table>\",\"options\":{\"pageLength\":10,\"columnDefs\":[{\"className\":\"dt-right\",\"targets\":[3,4,5,6]},{\"orderable\":false,\"targets\":0},{\"name\":\" \",\"targets\":0},{\"name\":\"CBSA\",\"targets\":1},{\"name\":\"NAME\",\"targets\":2},{\"name\":\"year\",\"targets\":3},{\"name\":\"population\",\"targets\":4},{\"name\":\"permits\",\"targets\":5},{\"name\":\"composite_score\",\"targets\":6}],\"order\":[],\"autoWidth\":false,\"orderClasses\":false}},\"evals\":[],\"jsHooks\":[]}</script>\n```\n\n:::\n:::\n\n\n\n**Task 6**\n\n\n::: {.cell}\n\n```{.r .cell-code}\nlibrary(dplyr)\nlibrary(ggplot2)\nlibrary(scales)\nlibrary(RcppRoll)\n\nPOPULATION_clean1 <- POPULATION %>%\n  rename(CBSA = GEOID) %>%\n  select(CBSA, NAME, year, population) %>%\n  mutate(CBSA = as.character(CBSA))\n\nRENT_clean <- RENT %>%\n  rename(CBSA = GEOID) %>%\n  select(CBSA, NAME, year, monthly_rent) %>%\n  mutate(CBSA = as.character(CBSA))\n\nPERMITS_clean <- PERMITS %>%\n  select(CBSA, new_housing_units_permitted, year) %>%\n  mutate(CBSA = as.character(CBSA))\n\nhousing_data <- POPULATION_clean1 %>%\n  left_join(PERMITS_clean, by = c(\"CBSA\", \"year\")) %>%\n  group_by(CBSA) %>%\n  arrange(year, .by_group = TRUE) %>%\n  mutate(\n    pop_5yrs_ago = lag(population, 5),\n    pop_growth_5yr = population - pop_5yrs_ago,\n    housing_growth_instant = (new_housing_units_permitted / population) * 1000,\n    housing_growth_rate = if_else(pop_growth_5yr > 0,new_housing_units_permitted / pop_growth_5yr, 0)) %>%\n  ungroup()\n\nexclude_cols <- c(\"GEOID\", \"NAME\", \"year\", \"moe\", \"variable\")\nincome_candidates <- setdiff(names(INCOME), exclude_cols)\nnum_candidates <- income_candidates[sapply(INCOME[income_candidates], is.numeric)]\n\nincome_col <- num_candidates[1]\nmessage(\"Detected income column: \", income_col)\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nDetected income column: household_income\n```\n\n\n:::\n\n```{.r .cell-code}\nrent_burden <- RENT_clean %>%\n  left_join(\n    INCOME %>%\n      mutate(GEOID = as.character(GEOID)) %>%\n      select(GEOID, year, !!sym(income_col)) %>%\n      rename(household_income = !!sym(income_col)),\n    by = c(\"CBSA\" = \"GEOID\", \"year\")) %>%\n  mutate(\n    rent_burden_ratio = (monthly_rent * 12) / household_income) %>%\n  select(CBSA, NAME, year, rent_burden_ratio)\n\n\nmerged_data <- housing_data %>%\n  mutate(CBSA = as.character(CBSA)) %>%\n  left_join(\n    rent_burden %>% mutate(CBSA = as.character(CBSA)),\n    by = c(\"CBSA\", \"NAME\", \"year\"))\n\nglimpse(merged_data)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\nRows: 7,279\nColumns: 10\n$ CBSA                        <chr> \"10140\", \"10140\", \"10140\", \"10140\", \"10140…\n$ NAME                        <chr> \"Aberdeen, WA Micro Area\", \"Aberdeen, WA M…\n$ year                        <dbl> 2009, 2010, 2011, 2012, 2013, 2014, 2015, …\n$ population                  <dbl> 71797, 72882, 72546, 71692, 71078, 70818, …\n$ new_housing_units_permitted <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ pop_5yrs_ago                <dbl> NA, NA, NA, NA, NA, 71797, 72882, 72546, 7…\n$ pop_growth_5yr              <dbl> NA, NA, NA, NA, NA, -979, -1760, -918, 100…\n$ housing_growth_instant      <dbl> NA, NA, NA, NA, NA, NA, NA, NA, NA, NA, NA…\n$ housing_growth_rate         <dbl> NA, NA, NA, NA, NA, 0.00000000, 0.00000000…\n$ rent_burden_ratio           <dbl> 0.2146100, 0.2078013, 0.1970092, 0.1848919…\n```\n\n\n:::\n\n```{.r .cell-code}\nsummary(merged_data$rent_burden_ratio)\n```\n\n::: {.cell-output .cell-output-stdout}\n\n```\n   Min. 1st Qu.  Median    Mean 3rd Qu.    Max. \n 0.1231  0.1738  0.1921  0.1966  0.2156  0.3819 \n```\n\n\n:::\n\n```{.r .cell-code}\nlibrary(dplyr)\n\ncbsa_summary <- merged_data %>%\n  group_by(CBSA, NAME) %>%\n  summarize(\n    rent_burden_early = mean(rent_burden_ratio[year %in% 2009:2012], na.rm = TRUE),\n    rent_burden_recent = mean(rent_burden_ratio[year %in% 2019:2023], na.rm = TRUE),\n    rent_burden_change = rent_burden_recent - rent_burden_early,\n    pop_early = mean(population[year %in% 2009:2012], na.rm = TRUE),\n    pop_recent = mean(population[year %in% 2019:2023], na.rm = TRUE),\n    pop_growth_rate = (pop_recent - pop_early) / pop_early,\n    housing_growth_avg = mean(housing_growth_instant, na.rm = TRUE)\n  ) %>%\n  ungroup()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\n`summarise()` has grouped output by 'CBSA'. You can override using the\n`.groups` argument.\n```\n\n\n:::\n\n```{.r .cell-code}\n#Graph 1#\nlibrary(ggplot2)\n\nggplot(cbsa_summary, aes(x = housing_growth_avg, y = -rent_burden_change)) +\n  geom_point(alpha = 0.6, color = \"blue\") +\n  geom_vline(xintercept = mean(cbsa_summary$housing_growth_avg, na.rm = TRUE), linetype = \"dashed\", color = \"red\") +\n  geom_hline(yintercept = 0, linetype = \"dashed\", color = \"red\") +\n  labs(\n    title = \"YIMBY Scorecard: Housing Growth vs Rent Burden Change (2009–2023)\",\n    subtitle = \"Top-right quadrant: High housing growth + falling rent burden\",\n    x = \"Average Housing Growth (permits per 1,000 residents)\",\n    y = \"Decrease in Rent Burden (negative change = improvement)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 470 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mp02_files/figure-html/unnamed-chunk-13-1.png){width=672}\n:::\n:::\n\n\n\n*Table 2*\n\n\n\n::: {.cell}\n\n```{.r .cell-code}\nggplot(cbsa_summary, aes(x = pop_growth_rate * 100, y = -rent_burden_change)) +\n  geom_point(aes(size = housing_growth_avg, color = housing_growth_avg), alpha = 0.6) +\n  scale_color_viridis_c(option = \"plasma\") +\n  labs(\n    title = \"Population Growth vs Rent Burden Change (2009–2023)\",\n    subtitle = \"Bubble size and color represent housing growth intensity\",\n    x = \"Population Growth Rate (%)\",\n    y = \"Decrease in Rent Burden (negative change = improvement)\",\n    color = \"Housing Growth\\n(per 1,000 residents)\"\n  ) +\n  theme_minimal()\n```\n\n::: {.cell-output .cell-output-stderr}\n\n```\nWarning: Removed 470 rows containing missing values or values outside the scale range\n(`geom_point()`).\n```\n\n\n:::\n\n::: {.cell-output-display}\n![](mp02_files/figure-html/unnamed-chunk-14-1.png){width=672}\n:::\n:::\n\n\n\n**Task 7**\n\n**YIMBY Policy Bill Policy Brief**\n\nYIMBY refers to \"Yes In My Backyard\", which advocates for new development, covering construction and real estate from a pro-growth perspective. Given the cost of living crisis we have seen in recent years, where rent prices have far surpassed the average American’s salary, we must implement policies to increase housing supply and ease this cost of living crisis.\n\nTo identify high YIMBY cities, the government can track two key metrics: rent burden and housing growth. The rent burden metric measures the share of a household’s income spent on rent, reflecting overall housing affordability. Meanwhile, the housing growth metric measures the rate at which new housing units are being built, indicating whether cities are expanding their supply to meet demand. This bill intends to support cities that are at least working to increase housing supply and create incentives for this to continue, so that the rent burden becomes lower.\n\nTo address this crisis, we have identified Representative Ilhan Omar (MN-05) as the sponsor of our YIMBY bill. Her district is in Minneapolis, which is a success story in the YIMBY movement. In 2019, it became the first major U.S. city to eliminate single-family-only zoning, a move that spurred the development of duplexes and other middle-class housing (Smith, 2022). Given this background, as well as her record for sponsoring public housing bills, including legislation calling for 9.5 million new public housing units, we believe that she is the best sponsor for our bill (Ibid).\n\nFor co-sponsor, we believe that Robert Garcia (CA-42) is the prime candidate for the co-sponsor of our YIMBY bill. Despite opposition from residents in his district of Long Beach, Robert Garcia is one of the biggest proponents of YIMBY in Congress. Given both their support, we believe that these 2 congressmen are the best duo to sponsor our bills.\n\nThis YIMBY bill would provide significant benefits to both teachers and construction workers in Minnesota and Long Beach, California, as these two occupations represent large portions of the local workforce and are backed by influential unions. The teachers are backed by the Teachers Association of Long Beach and Education Minnesota. In both regions, teachers face growing challenges with housing affordability. In Long Beach, the median rent for a one-bedroom apartment exceeds $2,000 per month, while the average teacher salary is around $72,000, making it difficult for educators to live near their schools (Long Beach Unified School District). Similarly, in Minnesota, teachers also struggle with rising housing costs. By increasing the housing supply through zoning reform and promoting multifamily development near schools and public transit, this bill would help lower rent burdens. \n\nEven a modest rent reduction would allow teachers to save thousands of dollars per year, improving their financial stability and job satisfaction. Lower housing costs would also make it easier for school districts to attract and retain qualified teachers, directly supporting educational outcomes. This bill would also have a strong positive impact on construction workers, who are represented by powerful labor unions such as the Minnesota Building and Construction Trades Council and the Southern California District Council of Laborers. Encouraging more housing construction provides steady, union-backed employment and wage growth.\n\nOverall, the YIMBY bill supports two key constituencies essential to both Minnesota and Long Beach. By lowering rent burdens for teachers and creating thousands of new jobs for unionized construction labor, the bill delivers broad economic and social benefits and makes it an attractive and practical policy for representatives.\n\nBibliography\n\n“Salary & Benefits.” Long Beach Unified School District, www.lbschools.net/departments/human-resource-services/for-current-employees/salary-benefits. Accessed 30 Oct. 2025. \n\nSmith, Carl. “Ending Single-Family Zoning Is Not a Stand-Alone Solution.” Governing, Governing, 21 Jan. 2022, www.governing.com/community/ending-single-family-zoning-is-not-a-stand-alone-solution. ",
    "supporting": [
      "mp02_files"
    ],
    "filters": [
      "rmarkdown/pagebreak.lua"
    ],
    "includes": {
      "include-in-header": [
        "<link href=\"../../site_libs/htmltools-fill-0.5.8.1/fill.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/htmlwidgets-1.6.4/htmlwidgets.js\"></script>\n<link href=\"../../site_libs/datatables-css-0.0.0/datatables-crosstalk.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/datatables-binding-0.34.0/datatables.js\"></script>\n<script src=\"../../site_libs/jquery-3.6.0/jquery-3.6.0.min.js\"></script>\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.min.css\" rel=\"stylesheet\" />\n<link href=\"../../site_libs/dt-core-1.13.6/css/jquery.dataTables.extra.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/dt-core-1.13.6/js/jquery.dataTables.min.js\"></script>\n<link href=\"../../site_libs/crosstalk-1.2.2/css/crosstalk.min.css\" rel=\"stylesheet\" />\n<script src=\"../../site_libs/crosstalk-1.2.2/js/crosstalk.min.js\"></script>\n"
      ]
    },
    "engineDependencies": {},
    "preserve": {},
    "postProcess": true
  }
}